apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: "72.6.2"
    helm:
      releaseName: kube-prometheus-stack
      values: |
        # Global settings
        global:
          rbac:
            create: true # Ensure RBAC resources are created
            pspEnabled: false # Assuming PSP is not strictly enforced or handled cluster-wide

        grafana:
          enabled: true
          adminPassword: "test1234" # !!! IMPORTANT: Change this to a strong, unique password !!!
          ingress:
            enabled: true
            ingressClassName: nginx
            hosts:
              - monitoring.papikos.shop
          persistence:
            enabled: true
            type: pvc
            storageClassName: default
            accessModes: ["ReadWriteOnce"]
            size: 5Gi # Reduced size
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 300m
              memory: 512Mi
          # Add Loki as an additional datasource
          # This assumes Loki will be available at 'loki-stack.monitoring.svc.cluster.local:3100'
          additionalDataSources:
            - name: Loki
              type: loki
              url: http://loki-stack.monitoring.svc.cluster.local:3100
              access: proxy
              isDefault: false
              jsonData:
                maxLines: 1000

        prometheus:
          prometheusSpec:
            retention: 5d
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: default 
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi 
       
        # Alertmanager Configuration
        alertmanager:
          alertmanagerSpec:
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: default
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 2Gi
            resources:
              requests:
                cpu: 50m
                memory: 128Mi
              limits:
                cpu: 100m
                memory: 256Mi

        kubeStateMetrics:
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 256Mi
        nodeExporter:
          resources:
            requests:
              cpu: 20m
              memory: 64Mi
            limits:
              cpu: 50m
              memory: 128Mi

  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true 
