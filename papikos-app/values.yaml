global:
  activeColor: blue
  # Global image settings
  imageRegistry: asia-southeast1-docker.pkg.dev/belajar-kube-457207/papikos-repository
  # Default image pull policy
  imagePullPolicy: Always
ingress:
  annotations: {}
  # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
serviceAccount:
  create: false
  name: "default"
frontend:
  enabled: true
  image:
    repository: asia-southeast1-docker.pkg.dev/belajar-kube-457207/papikos-repository/papikos-fe
    tag: v0.0.1
    imagePullPolicy: Always
  service:
    name: frontend
    port: 3000
  ingress:
    enabled: true
    host: papikos.shop
  metrics:
    path: "/actuator/prometheus"
auth:
  enabled: true
  image:
    repository: asia-southeast1-docker.pkg.dev/belajar-kube-457207/papikos-repository/papikos-auth
    tag: v0.0.4 # This will be automatically updated by CI/CD
    imagePullPolicy: Always
  service:
    name: auth
    port: 8080
  ingress:
    enabled: true
    host: auth.papikos.shop
  metrics:
    path: "/actuator/prometheus"
  rabbitmq:
    enabled: true
    mountAllKeysFromSecret: "amqp-configuration"
  config:
    enabled: true
    mountAllKeysFromSecret: "auth-configuration"
kos:
  enabled: true
  image:
    repository: asia-southeast1-docker.pkg.dev/belajar-kube-457207/papikos-repository/papikos-kos
    tag: v0.0.7 # This will be automatically updated by CI/CD
    imagePullPolicy: Always
  service:
    name: kos
    port: 8080
  ingress:
    enabled: true
    host: kos.papikos.shop
  metrics:
    path: "/actuator/prometheus"
  rabbitmq:
    enabled: true
    mountAllKeysFromSecret: "amqp-configuration"
  config:
    enabled: true
    mountAllKeysFromSecret: "kos-configuration"
rental:
  enabled: true
  image:
    repository: asia-southeast1-docker.pkg.dev/belajar-kube-457207/papikos-repository/papikos-rental
    tag: v0.0.5 # This will be automatically updated by CI/CD
    imagePullPolicy: Always
  service:
    name: rental
    port: 8080
  ingress:
    enabled: true
    host: rental.papikos.shop
  metrics:
    path: "/actuator/prometheus"
  rabbitmq:
    enabled: true
    mountAllKeysFromSecret: "amqp-configuration"
  config:
    enabled: true
    mountAllKeysFromSecret: "rental-configuration"
payment:
  enabled: true
  image:
    repository: asia-southeast1-docker.pkg.dev/belajar-kube-457207/papikos-repository/papikos-payment
    tag: v0.0.2 # This will be automatically updated by CI/CD
    imagePullPolicy: Always
  service:
    name: payment
    port: 8080
  ingress:
    enabled: true
    host: payment.papikos.shop
  metrics:
    path: "/actuator/prometheus"
  rabbitmq:
    enabled: true
    mountAllKeysFromSecret: "amqp-configuration"
  config:
    enabled: true
    mountAllKeysFromSecret: "payment-configuration"
notification:
  enabled: true
  image:
    repository: asia-southeast1-docker.pkg.dev/belajar-kube-457207/papikos-repository/papikos-notification-wishlist
    tag: v0.0.4 # This will be automatically updated by CI/CD
    imagePullPolicy: Always
  service:
    name: notification
    port: 8080
  ingress:
    enabled: true
    host: notification.papikos.shop
  metrics:
    path: "/actuator/prometheus"
  rabbitmq:
    enabled: true
    mountAllKeysFromSecret: "amqp-configuration"
  config:
    enabled: true
    mountAllKeysFromSecret: "notification-configuration"
chat:
  enabled: true
  image:
    repository: asia-southeast1-docker.pkg.dev/belajar-kube-457207/papikos-repository/papikos-chat
    tag: v0.0.5 # This will be automatically updated by CI/CD
    imagePullPolicy: Always
  service:
    name: chat
    port: 8080
  ingress:
    enabled: true
    host: chat.papikos.shop
  metrics:
    path: "/actuator/prometheus"
  rabbitmq:
    enabled: true
    mountAllKeysFromSecret: "amqp-configuration"
  config:
    enabled: true
    mountAllKeysFromSecret: "chat-configuration"
version:
  auth: latest # Current deployed version
  frontend: latest # Current deployed version
  kos: latest # Current deployed version
  rental: latest # Current deployed version
  payment: latest # Current deployed version
  notification: latest # Current deployed version
  chat: latest # Current deployed version
  lastUpdated: "" # Timestamp of last update
  deployedBy: "" # Who triggered the deployment
