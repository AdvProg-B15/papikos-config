apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "vault-secrets.fullname" . }}
  labels:
    {{- include "vault-secrets.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "vault-secrets.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "vault-secrets.fullname" . }}-headless # Crucial for StatefulSet
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vault-secrets.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "vault-secrets.serviceAccountName" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 60 # Give Vault time to shut down gracefully
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "vault"
            - "server"
            - "-config=/vault/config/vault.hcl"
          ports:
            - name: http
              containerPort: 8200
              protocol: TCP
            - name: cluster
              containerPort: 8201 # For Raft internode communication
              protocol: TCP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HOSTNAME # StatefulSet pods get a stable hostname like <statefulsetname>-0
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            # TODO: IMPLEMENT TLS AND CA CERTIFICATES
            # - name: VAULT_CACERT
            #   value: "/vault/userconfig/vault-ca/ca.crt"
            # - name: VAULT_TLSCERT
            #   value: "/vault/userconfig/vault-tls/tls.crt"
            # - name: VAULT_TLSKEY
            #   value: "/vault/userconfig/vault-tls/tls.key"
          livenessProbe:
            httpGet:
              path: /v1/sys/health?standbyok=true&sealedcode=200&uninitcode=200 # Allows uninitialized/sealed to be "live"
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /v1/sys/health?standbyok=true # Ready if unsealed or standby
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: vault-config
              mountPath: /vault/config
            {{- if .Values.persistence.enabled }}
            - name: vault-data
              mountPath: /vault/file # Matches storage.raft.path in config
            {{- end }}
      volumes:
        - name: vault-config
          configMap:
            name: {{ include "vault-secrets.fullname" . }}-config
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: vault-data
      labels:
        {{- include "vault-secrets.selectorLabels" . | nindent 8 }}
    spec:
      accessModes: {{ .Values.persistence.accessModes | toYaml | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClassName }}
      storageClassName: {{ .Values.persistence.storageClassName | quote }}
      {{- end }}
  {{- end }}
