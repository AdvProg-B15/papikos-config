apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault-prod
  namespace: argocd 
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default 
  source:
    # Source of the Helm chart
    repoURL: https://helm.releases.hashicorp.com
    chart: vault
    targetRevision: "0.30.0" 

    helm:
      releaseName: vault-prod # Helm release name
      valuesObject:
        global:
          tlsDisable: false
        
        server:
          image:
            repository: "hashicorp/vault"
            tag: "1.19.0" 

          replicas: 1
          
          ha:
            enabled: true
            raft:
              enabled: true
              setNodeId: true 
              config: |
                ui = true
                disable_mlock = false 

                # Listener configuration for API and Raft communication
                # TLS is enabled because global.tlsDisable is false.
                # The chart will manage certs or we can provide them.
                listener "tcp" {
                  address = "[::]:8200"
                  cluster_address = "[::]:8201"
                  tls_disable = "false"
                  # Paths to TLS assets managed by the chart or custom secrets
                  tls_cert_file = "/vault/userconfig/vault-server-tls/vault.crt"
                  tls_key_file = "/vault/userconfig/vault-server-tls/vault.key"
                  tls_client_ca_file = "/vault/userconfig/vault-server-tls/vault.ca"
                }

                # Raft storage backend
                storage "raft" {
                  path = "/vault/data"
                }

                # Auto-unseal configuration using Google Cloud KMS
                seal "gcpckms" {
                  project     = "belajar-kube-457207"
                  region      = "ap-southeast-2"
                  key_ring    = "vault-keyring"
                  crypto_key  = "vault-key"
                }

                telemetry {
                  prometheus_retention_time = "30s"
                  disable_hostname = true
                }
          
          # Persistent storage for Raft data
          dataStorage:
            enabled: true
            size: 2Gi 

          # Persistent storage for audit logs
          # TODO: Send audit logs to a dedicated system (e.g., Splunk, ELK)
          auditStorage:
            enabled: true 
            size: 2Gi 
          
          # Service Account for Vault server pods
          # Annotate with Workload Identity for GCP KMS auto-unseal
          serviceAccount:
            create: true
            name: "vault-server" 
            annotations:
              iam.gke.io/gcp-service-account: "vault-server-gsa@belajar-kube-457207.iam.gserviceaccount.com"

          ui:
            enabled: true
            serviceType: "LoadBalancer"

          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
        
        injector:
          enabled: true
          image:
            repository: "hashicorp/vault-k8s"
            tag: "1.6.0"
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "250m"

  destination:
    server: https://kubernetes.default.svc
    namespace: vault

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true 

